const { expect } = require("chai");

// Mock cleanedAssertOptions
const cleanedAssertOptions = {
    shouldLimitAssertionLogs: false,
    assertionLogLimit: 10
};

// The assert object to be tested
const assert = {
    failException: "AssertError",

    fail: function fail(message) {
        let msg = message;
        if (cleanedAssertOptions.shouldLimitAssertionLogs) {
            msg = message.substring(
                0,
                cleanedAssertOptions.assertionLogLimit,
            );
        }
        const error = new Error(msg);
        error.name = this.failException || assert.failException;

        throw error;
    },

    pass: function pass() {
        return;
    }
};

describe("assert module", function() {

    it("should throw an error with the correct message when fail is called", function() {
        const message = "Test failure message";
        expect(() => assert.fail(message)).to.throw(Error, message);
    });

    it("should throw an error with a truncated message when fail is called with shouldLimitAssertionLogs true", function() {
        cleanedAssertOptions.shouldLimitAssertionLogs = true;
        const message = "This is a long test failure message";
        const expectedMessage = message.substring(0, cleanedAssertOptions.assertionLogLimit);

        expect(() => assert.fail(message)).to.throw(Error, expectedMessage);
    });

    it("should throw an error with the correct error name when fail is called", function() {
        const message = "Test failure message";
        try {
            assert.fail(message);
        } catch (error) {
            expect(error.name).to.equal("AssertError");
        }
    });

    it("should do nothing when pass is called", function() {
        expect(assert.pass()).to.be.undefined;
    });
});

The output------------------------------
  assert module
    ✓ should throw an error with the correct message when fail is called
    ✓ should throw an error with a truncated message when fail is called with shouldLimitAssertionLogs true
    ✓ should throw an error with the correct error name when fail is called
    ✓ should do nothing when pass is called

  4 passing (XXms)
